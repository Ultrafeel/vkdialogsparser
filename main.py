#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
VK Dialogs and Posts Parser
Enhanced version with community posts support and modern configuration system.
"""

import vk_api
import sys
import os

# Add current directory to path for imports
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from config.settings import Config
from modules.dialogs import DialogsManager
from modules.posts import PostsManager


def init_vk_session(token: str) -> vk_api.VkApi:
    """Initialize VK API session."""
    try:
        vk_session = vk_api.VkApi(token=token)
        # Test the connection
        vk_session.method('users.get')
        return vk_session
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ VK —Å–µ—Å—Å–∏–∏: {e}")
        return None


def main():
    """Main function with enhanced functionality."""
    print("=== VK Dialogs and Posts Parser ===")
    print("–í–µ—Ä—Å–∏—è 2.0 - —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –ø–æ—Å—Ç–æ–≤ —Å–æ–æ–±—â–µ—Å—Ç–≤\n")
    
    try:
        # Load configuration
        print("–ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...")
        config = Config()
        config.print_config_summary()
        
        # Initialize VK session
        print("–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è VK —Å–µ—Å—Å–∏–∏...")
        vk_session = init_vk_session(config.vk_token)
        if not vk_session:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å VK —Å–µ—Å—Å–∏—é. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ç–æ–∫–µ–Ω.")
            return False
        
        print("‚úÖ VK —Å–µ—Å—Å–∏—è —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞\n")
        
        success = True
        
        # Process dialogs if requested
        if config.should_dump_dialogs():
            print("üì± –ù–∞—á–∏–Ω–∞–µ–º –≤—ã–≥—Ä—É–∑–∫—É –¥–∏–∞–ª–æ–≥–æ–≤...")
            dialogs_manager = DialogsManager(vk_session, config)
            if not dialogs_manager.dump_dialogs():
                success = False
        
        # Process posts if requested
        if config.should_dump_posts():
            print("üìù –ù–∞—á–∏–Ω–∞–µ–º –≤—ã–≥—Ä—É–∑–∫—É –ø–æ—Å—Ç–æ–≤ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞...")
            posts_manager = PostsManager(vk_session, config)
            if not posts_manager.dump_posts():
                success = False
        
        if success:
            print("\nüéâ –í—Å–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –∑–∞–≤–µ—Ä—à–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
            print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏: {config.output_directory}")
        else:
            print("\n‚ö†Ô∏è –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –∑–∞–≤–µ—Ä—à–∏–ª–∏—Å—å —Å –æ—à–∏–±–∫–∞–º–∏.")
        
        return success
        
    except KeyboardInterrupt:
        print("\n‚ùå –û–ø–µ—Ä–∞—Ü–∏—è –ø—Ä–µ—Ä–≤–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.")
        return False
    except Exception as e:
        print(f"\n‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        return False


if __name__ == "__main__":
    main()